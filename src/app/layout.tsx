//"use client;"
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";

import { AppBar } from "@/components/AppBar";
import { ThemeProvider } from "@/components/ThemeProvider";
import { StartTimeMachine } from "@/components/StartTimeMachine";
import { ApolloWithSsr as Apollo } from "./Apollo";
import { NoSsr } from "@/components/NoSsr";
import { graphql } from "@/src/gql";
import NextAuthSession from "@/components/NextAuthSession";
import { auth } from "@/auth";
import Chat from "@/src/components/chat/Chat";
import { PreloadQuery } from "@/lib/apolloRSC";
import { Toaster } from "@/components/ui/toaster";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
const conversationsListQuery = graphql(`
  query conversationsList($id: MongoID!) {
    user_findById(_id: $id) {
      _id
      Messages {
        _id
        ...conversationsListItem
      }
    }
  }
`);

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await auth();
  return (
    <html lang="en" suppressHydrationWarning>
      <body className={inter.className}>
        <StartTimeMachine />
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <NextAuthSession session={session}>
            <Apollo>
              <AppBar />
              <div className="p-4">{children}</div>

              {session?.user.id && (
                <PreloadQuery
                  query={conversationsListQuery}
                  variables={{ id: session.user.id }}
                >
                  {(chatQueryRef) => (
                    <Chat size="sm" conversationsQueryRef={chatQueryRef} />
                  )}
                </PreloadQuery>
              )}
            </Apollo>
          </NextAuthSession>
          <Toaster />
        </ThemeProvider>
      </body>
    </html>
  );
}
